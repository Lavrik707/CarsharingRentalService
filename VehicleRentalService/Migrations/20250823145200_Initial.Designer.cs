// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VehicleRentalService.Models;

#nullable disable

namespace VehicleRentalService.Migrations
{
    [DbContext(typeof(ServiceDbContext))]
    [Migration("20250823145200_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VehicleRentalService.Models.News", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PublicationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("News");
                });

            modelBuilder.Entity("VehicleRentalService.Models.Trip", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("TripBegin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TripEnd")
                        .HasColumnType("datetime2");

                    b.Property<long>("VehicleId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId");

                    b.ToTable("Trips");
                });

            modelBuilder.Entity("VehicleRentalService.Models.Vehicle", b =>
                {
                    b.Property<long>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("VehicleId"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PricePerMinute")
                        .HasColumnType("decimal(8, 2)");

                    b.HasKey("VehicleId");

                    b.ToTable("Vehicle");

                    b.HasDiscriminator().HasValue("Vehicle");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("VehicleRentalService.Models.Bike", b =>
                {
                    b.HasBaseType("VehicleRentalService.Models.Vehicle");

                    b.HasDiscriminator().HasValue("Bike");
                });

            modelBuilder.Entity("VehicleRentalService.Models.Car", b =>
                {
                    b.HasBaseType("VehicleRentalService.Models.Vehicle");

                    b.Property<double>("CurrentFuel")
                        .HasColumnType("float");

                    b.Property<double>("MaxFuel")
                        .HasColumnType("float");

                    b.Property<int>("Transmission")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Car");
                });

            modelBuilder.Entity("VehicleRentalService.Models.Scooter", b =>
                {
                    b.HasBaseType("VehicleRentalService.Models.Vehicle");

                    b.Property<int>("Charge")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Scooter");
                });

            modelBuilder.Entity("VehicleRentalService.Models.Trip", b =>
                {
                    b.HasOne("VehicleRentalService.Models.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });
#pragma warning restore 612, 618
        }
    }
}
